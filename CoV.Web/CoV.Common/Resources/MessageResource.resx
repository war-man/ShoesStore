<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Between" xml:space="preserve">
    <value>{0} must be between {1} and {2}</value>
  </data>
  <data name="Compare" xml:space="preserve">
    <value>Vui lòng nhập đúng mật khẩu!</value>
  </data>
  <data name="ConfirmLogout" xml:space="preserve">
    <value>Are you sure you want to logout?</value>
  </data>
  <data name="ConfirmMoveUser" xml:space="preserve">
    <value>Are you sure you want to move selected users to deffirent department?</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>{0} is invalid email format.</value>
  </data>
  <data name="EmailValidator" xml:space="preserve">
    <value>{PropertyName} is invalid email format.</value>
  </data>
  <data name="ExpiredToken" xml:space="preserve">
    <value>Token is expired</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>{0} must be greater than {1}</value>
  </data>
  <data name="GreaterThanOrEqualValidator" xml:space="preserve">
    <value>{PropertyName} must be greater than or equal to {ComparisonValue}.</value>
  </data>
  <data name="GreaterThanValidator" xml:space="preserve">
    <value>{PropertyName} must be greater than {ComparisonValue}.</value>
  </data>
  <data name="InvalidCredentials" xml:space="preserve">
    <value>Email or Password is invalid.</value>
  </data>
  <data name="InvalidImportFormat" xml:space="preserve">
    <value>There are some invalid records. Please fix and try importing again.</value>
  </data>
  <data name="InvalidParameter" xml:space="preserve">
    <value>Parameter is invalid.</value>
  </data>
  <data name="InvalidSmartphone" xml:space="preserve">
    <value>The device already registered or owned by another user or invalid.</value>
  </data>
  <data name="InvilidExtension" xml:space="preserve">
    <value>Inputed file is not a valid. This only support the extensions {0}.</value>
  </data>
  <data name="LengthNotGreaterThan" xml:space="preserve">
    <value>{0} length can not be greater than {1} characters</value>
  </data>
  <data name="LengthNotLessThan" xml:space="preserve">
    <value>{0} length can not be less than {1} characters</value>
  </data>
  <data name="LengthValidator" xml:space="preserve">
    <value>{PropertyName} must be between {MinLength} and {MaxLength}.</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>{0} must be less than {1}</value>
  </data>
  <data name="LessThanOrEqualValidator" xml:space="preserve">
    <value>{PropertyName} must be less than or equal to {ComparisonValue}.</value>
  </data>
  <data name="LessThanValidator" xml:space="preserve">
    <value>{PropertyName} must be less than {ComparisonValue}.</value>
  </data>
  <data name="MaximumLengthValidator" xml:space="preserve">
    <value>{PropertyName} length can not be greater than {MaxLength} characters.</value>
  </data>
  <data name="MinimumLengthValidator" xml:space="preserve">
    <value>{PropertyName} length can not be less than {MinLength} characters.</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>There is no data.</value>
  </data>
  <data name="NonExistedToken" xml:space="preserve">
    <value>Token doesn't exist.</value>
  </data>
  <data name="NotGreaterThan" xml:space="preserve">
    <value>{0} can not be greater than {1}.</value>
  </data>
  <data name="NotLessThan" xml:space="preserve">
    <value>{0} can not be less than {1}.</value>
  </data>
  <data name="NotNullValidator" xml:space="preserve">
    <value>{PropertyName} can not be blank.</value>
  </data>
  <data name="NotSelected" xml:space="preserve">
    <value>You must select a {0}.</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>{0} must be a number.</value>
  </data>
  <data name="PasswordLength" xml:space="preserve">
    <value>Mật khẩu phải lớn hơn hoặc bằng 6 ký tự</value>
  </data>
  <data name="RefreshTokenNotFound" xml:space="preserve">
    <value>Refresh token was not found.</value>
  </data>
  <data name="RefreshTokenRevoked" xml:space="preserve">
    <value>Refresh token was revoked.</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>{0} can not be blank.</value>
  </data>
  <data name="RequiredFile" xml:space="preserve">
    <value>Please input a file.</value>
  </data>
  <data name="SystemError" xml:space="preserve">
    <value>System error. Please try again later.</value>
  </data>
  <data name="UserLoginFailed" xml:space="preserve">
    <value>Tài khoản hoặc mật khẩu không đúng</value>
  </data>
  <data name="LoginCustomerSingUpFailed" xml:space="preserve">
    <value>Email hoặc số điện thoại  đã tồn  tại </value>
  </data>
    <data name="CustomerSingUpFailed" xml:space="preserve">
    <value>Email hoặc số điện thoại chưa tồn  tại </value>
  </data>
  <data name="RecordNotFound" xml:space="preserve">
    <value>Record not found.</value>
  </data>
  <data name="AnUnexpectedErrorOccurred" xml:space="preserve">
    <value>An unexpected error has occurred</value>
  </data>
  <data name="InvalidFormat" xml:space="preserve">
    <value>Invalid format.</value>
  </data>
  <data name="GreaterThanOrEqual" xml:space="preserve">
    <value>{0} must be greater than or equal to {1}</value>
  </data>
  <data name="FindDataRequest" xml:space="preserve">
    <value>Hoàn thành tìm kiếm với {0} bản ghi</value>
  </data>
  <data name="ChangePassFailed" xml:space="preserve">
    <value>Đổi mật khẩu không thành công</value>
  </data>
  <data name="NullPassword" xml:space="preserve">
    <value>Vui lòng nhập mật khẩu!</value>
  </data>
    <data name="ConfiguePassword" xml:space="preserve">
    <value>Vui lòng nhập mật khẩu trùng nhau!</value>
  </data>
  <data name="NullPasswordConfirm" xml:space="preserve">
    <value>Vui lòng nhập lại mật khẩu!</value>
  </data>
  <data name="msgSync" xml:space="preserve">
    <value>Bạn có muốn đồng bộ tài khoản?</value>
  </data>
   <data name="NullUserPass" xml:space="preserve">
    <value>Username or PassWord not found </value>
  </data>
     <data name="UserNameNotNull" xml:space="preserve">
    <value>Username Not Null  </value>
  </data>
   <data name="UserNameMaxLength" xml:space="preserve">
    <value>User Name Max length 35 word</value>
  </data>
  <data name="PassWorkNotNull" xml:space="preserve">
    <value> PassWord not found </value>
  </data>
   <data name="PasswordMinLength" xml:space="preserve">
    <value> PassWord min length 3 word </value>
  </data>
     <data name="PasswordMixLength" xml:space="preserve">
    <value> PassWord max length 30 word </value>
  </data>
   <data name="errer404" xml:space="preserve">
    <value> Error 404</value>
  </data>
     <data name="error401" xml:space="preserve">
    <value> Error 401</value>
  </data>
     <data name="error500" xml:space="preserve">
    <value> Error 500</value>
  </data>
  <data name="DateTimeMin" xml:space="preserve">
    <value>Vui lòng nhập DateTime Lớn hơn </value>
  </data>
  
</root>